/*
Automatically ramps the 405 nm excitation during an acqusition.

AUTHOR: Kyle M. Douglass, http://kmdouglass.github.io

COPYRIGHT:     ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland
               Laboratory of Experimental Biophysics (LEB), 2016
*/

// Modify these variables for your specific configuration
String laser_name      = "Laser: Obis 405nm";
String state_name      = "State";
String power_name      = "PowerSetpoint";
int    frame_laser_on  = 10000;
int    frame_laser_off = 1;

// Frames for changing the laser power and the corresponding powers
int [] frames    = new int [] {10001, 15000, 19999};
double [] powers = new double [] {1, 2, 1};

// Code below this line not intended for modification
int off_state = 0;
int on_state  = 1;

acq.clearRunnables();

laser_on = new Runnable() {
   public void run() {
      mmc.setProperty(laser_name, state_name, on_state);
   }
};

laser_off = new Runnable() {
	public void run() {
      mmc.setProperty(laser_name, state_name, off_state);
   }
};

// Returns a runnable
// See http://micro-manager.3463995.n2.nabble.com/Acquisition-error-with-runnables-defined-in-a-for-loop-td7587119.html
public Runnable set_power(int index) {
	return new Runnable() {
		public void run() {
			mmc.setProperty(laser_name, power_name, powers[index]);
		}
	};
}

// Attach the runnables to the acquisition engine
// -1 --> attach to all planes along given dimension
acq.attachRunnable(frame_laser_on,-1,0,0, laser_on); // f, p, c, s, runnable
acq.attachRunnable(frame_laser_off,-1,0,0, laser_off);
acq.attachRunnable(19990,-1,0,0, laser_off);

// Power runnables
for(int ctr = 0; ctr < frames.length; ctr++) {

	// Attach a power runnable to the appropriate frame
	acq.attachRunnable(frames[ctr],-1,0,0, set_power(ctr));

}
