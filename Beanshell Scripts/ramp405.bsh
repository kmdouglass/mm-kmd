/*
Automatically ramps the 405nm laser power during an acqusition.

To use this script, simply set the first five variables to values appropriate
for your particular acquisition.
`laser_name` - The name of the device that Micro-Manager uses to reference it.
`state_name` - The name of the property that switches the laser on and off.
`power_name` - The property for the laser power.
`frame_laser_on`  - Turn on the laser at this frame
`frame_laser_off` - Turn off the laser at this frame

In addition, you can set an array of frames and powers for changing the laser
power during an acquisition. To do this, edit the `frames` and `powers` array.
For example, if `int [] frames = new int[] {1000, 2000};` and
`double [] powers = new double [] {5, 10};`, then the laser power will be set to
5 at frame 1000 and to 10 at frame 2000.

In case that the on/off states are not equal to `0` and `1`, you may need to
change the values of the variables `off_state` and `on_state`.

AUTHOR: Kyle M. Douglass, http://kmdouglass.github.io

COPYRIGHT:     ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland
               Laboratory of Experimental Biophysics (LEB), 2016
*/

// Modify these variables for your specific configuration
String laser_name      = "Laser: Obis 405nm";
String state_name      = "State";
String power_name      = "PowerSetpoint";
int    frame_laser_on  = 10000;
int    frame_laser_off = 1;

// Frames for changing the laser power and the corresponding powers
int [] frames    = new int [] {10001, 15000, 19999};
double [] powers = new double [] {1, 2, 1};

// Code below this line not intended for modification
int off_state = 0;
int on_state  = 1;

// TODO: Add assertion that frames and powers have the same length

acq.clearRunnables();

laser_on = new Runnable() {
   public void run() {
      mmc.setProperty(laser_name, state_name, on_state);
   }
};

laser_off = new Runnable() {
	public void run() {
      mmc.setProperty(laser_name, state_name, off_state);
   }
};

// Returns a runnable
// See http://micro-manager.3463995.n2.nabble.com/Acquisition-error-with-runnables-defined-in-a-for-loop-td7587119.html
public Runnable set_power(int index) {
	return new Runnable() {
		public void run() {
			mmc.setProperty(laser_name, power_name, powers[index]);
		}
	};
}

// Attach the runnables to the acquisition engine
// -1 --> attach to all planes along given dimension
acq.attachRunnable(frame_laser_on,-1,0,0, laser_on); // f, p, c, s, runnable
acq.attachRunnable(frame_laser_off,-1,0,0, laser_off);
acq.attachRunnable(19990,-1,0,0, laser_off);

// Power runnables
for(int ctr = 0; ctr < frames.length; ctr++) {

	// Attach a power runnable to the appropriate frame
	acq.attachRunnable(frames[ctr],-1,0,0, set_power(ctr));

}
